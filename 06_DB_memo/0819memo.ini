[JOIN]
- 여러 테이블을 하나의 테이블로 합치는 기술

- 관계형 데이터베이스는 최소한의 데이터를 테이블에 담고 있어
  원하는 정보를 테이블에서 조회하려면 한 개 이상의 테이블에서 
  데이터를 읽어와야 되는 경우가 많다.

- 이 때, 테이블간 관계를 맺기 위한 연결고리 역할이 필요한데,
  두 테이블에서 '같은 데이터를 저장하는 컬럼'이 '연결고리'가 됨. 


=======================================

1. [INSERT]

INSERT INTO 테이블명
VALUES(모든 컬럼에 추가할 값)

INSERT INTO 테이블명(컬럼명...)
VALUES(컬럼값...)
 

 2. [UPDATE]

UPDATE 테이블명
SET 컬럼명 = 수정할 값, 
    컬럼명 = 수정할 값,
    ...

WHERE 수정하려는 행을 찾는 조건

3. [DELETE]

DELETE
FROM 테이블명
WHERE 삭제하려는 행을 찾는 조건





================
[SELECT]

5. SELECT     컬럼명       -- 조회할 컬럼을 지정
1. FROM      테이블명     -- 조회할 테이블 
(+ JOIN)    ;연결고리(같은 값을 지닌) 컬럼 기준 한 행씩 연결
2. WHERE     조건식       -- 조회하려는 행만 골라내기
3. GROUP BY  컬럼명       -- 같은 컬럼값을 지닌 행끼리 그룹화
4. HAVING                 -- 조건에 맞는 그룹만 조회
6. ORDER BY  컬럼명       -- 조회 결과 정렬 기준 작성

=================================================================
[INSERT] : 테이블에 행을 삽입하는 구문
1)
INSERT INTO 테이블명
VALUES(모든 컬럼에 대입할 값)

2)
INSERT INTO 테이블명(컬럼명1, 컬럼명2, ....)
VALUES(컬럼값1, 컬럼값2, ....)
--> 값이 삽입되지 않는 컬럼은 NULL

;NULL)
;* JAVA 에서는 참조하고 있는 주소가 없음!
;* SQL 에서는 값이 없음!

* 서브쿼리 결과를 지정된 테이블에 모두 삽입 (= 여러 행 동시 INSERT)
INSERT INTO 테이블명
AS (서브쿼리)

=================================================================
[UPDATE] : 테이블에서 지정된 행의 컬럼 값을 수정하는 구문

UPDATE 테이블명
SELECT
  컬럼명 = 수정할 값,
  컬럼명 = 수정할 값,
  컬럼명 = 수정할 값,
  ...

WHERE 행을 지정하는 조건;    -- 없으면 전체 행 수정

=================================================================
[DELETE] : 테이블의 행을 삭제하는 구문

DELETE
FROM 테이블명
WHERE 행을 지정하는 조건

=================================================================
[DML : Data Manipulation Language] : 데이터 조작 언어

- SELECT, INSERT, UPDATE, DELETE, MERGE

* DQL(Data Query Language) : 데이터 질의 언어

- SELECT

================08-22==========================================
[TCL : Transaction Control Language] : 트랜잭션 제어 언어

- COMMIT    : 데이터 변경 사항(DML) 을 DB 에 반영

- ROLLBACK  : 데이터 변경 사항을 삭제 
              -> 마지막 COMMIT 상태로 돌아감

- SAVEPOINT : 트랜잭션에 저장 지점 설정
              -> 원하는 저장 지점까지만 ROLLBACK 가능

[DDL : Data Definition Language] : 데이터 정의 언어

값(데이터)을 저장하는 공간을 정의 EX) CREATE TABLE

제약 조건(CONSTRAINTS)
  - 1 : NOT NULL    * NULL 불가
  - 2 : UNIQUE      * 중복 불가
  - 3 : PRIMARY KEY * 식별자 / 다른 행과 구분
  - 4 : FOREIGN KEY * 테이블을 연결하는 JOIN 의 연결고리 역할


FK 제약 조건 : 자식 테이블 컬럼에 저장될 수 있는 값은 
               부모 테이블 컬럼에 작성된 값만 저장 가능!

[DCL]