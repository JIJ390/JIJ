[Spring Framework의 주요 특징]

IOC(Inversion of Control) * 중요 *
제어 반전 : 컨트롤의 제어권이 개발자가 아니라 프레임워크에 있다
            Spring Container가 만들어둔 객체를 필요할 때 얻어와서 사용 (유지보수성)
            - 기존에는 객체를 사용할 때마다 새로 만듬
            - Spring 에서는 하나 만들어둔 객체를 계속 사용

DI(Dependency Injection) * 중요 *
의존성 주입 : 개발자가 직접 객체를 생성하지 않고 Spring Container가 만들어둔 객체를 필요한 위치에서 주입

IOC + DI 한 세트 !!

(Plain Old Java Object)
POJO : 상속 받아 클래스를 구현하지 않고
       일반적인 자바 객체(POJO)를 사용할 수 있도록 지원


AOP(Aspect Oriented Programming)
관점 지향 프로그래밍 : 프로그램 중간중간 코드 끼워넣어줌?

Spring MVC : MVC(Model, View, Controller) 디자인 패턴을 적용할 수 있는 어노테이션을 지원
             백엔드, 프론트(View) 분업이 쉬움


PSA(Portable Service Abstraction)
 : 외부 라이브러리, API 등 외부 기술을 쉽게 이용할 수 있도록 여러 인터페이스, 추상 클래스를 제공


[Spring Container]
읽어보기!!

spring, spring boot 는 인터넷 연결환경에서만 개발 가능!

https://start.spring.io/

spring 설정 

general : heap status 
general > workspace : refresh using native hooks
XML : Download external

font 검색 : basic> text font 
          : console

formatter : java : edit > indentation : tab


====================

mvnrepository

요청 클릭 dispatcherservlet 이동
handlingmapping 요청주소에 맞는 메서드 찾기


Annotation : 컴파일러가 인식하는 주석