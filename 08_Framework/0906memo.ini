Datasource 
-> Java DBCP 을 다루는 인터페이스

DATABASE CONNECTION POOL

Connection conn = getConnecrion();
// DB 연결할 때만다 Connection 생성

CONNECTION POOL 
여러 커넥션 들을 열어 놓고 db 연결 시마다 
꺼내서 사용 후 반납

이 과정을 위해 사용하는게 Datasource

- db 연결이 빨라짐
- close() 구문 필요 x 좀더 간편
- 서버에 여러 연결이 있어도 과부하 없음


----------------------------------
DB 연결 설정 순서
DBConfig

1) config.properties 내용을 읽어와
   HikariConfig Bean 생성 / 등록

2) HikariConfig Bean 을 이용해서
   Datasource(Java DBCP 사용을 위한 인터페이스) Bean 등록

3) Datasource Bean 을 이용해서
   DataSourceTransactionManager Bean 등록
   (DBCP 을 이용해서 SQL 수행 시 트랜잭션 처리를 관리)

4) DataSource + mapper 파일 + mybatis-config .xml 파일을 이용해
   SqlSessionFactory Bean 등록
   (DB연결 + SQL파일 위치 등록 
		+ 마이바티스 설정 적용 + 클래스 별칭 등록)

5) SqlSessionFactory 이용해
   SqlSessionTemplate() Bean 등록
   (DB 연결 + 마이바티스 기능 사용 
    + Spring 제공 트랜잭션 관련 어노테이션 사용 가능)



-----
* mybatis 예외처리
	// spring 에서 sqlexceoption, ioexception 등
	// checked exception 들을 unchecked exception으로 변환해줌!!!
	// try catch 구문 안쓰는 이유!!!!!!!!



~ 조각 fragments
@ 링크 
# messages.properties
* th:object 생략
$ 나머지