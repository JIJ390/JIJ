[상속]

'클래스의 재사용, 공통적인 규약 정의'

자바에서는 다중 상속 불가

오버라이딩과 오버로딩의 차이

오버로딩 : 여러가지 일에 대처 가능

키워드 :  super(), Overriding, extends, final 클래스/메서드

[다형성]

다양한 형태

'상속을 이용한 기술'로 부모 클래스 타입 참조변수 하나로
상속 관계에 있는 여러 타입의 자식 객체를 참조할 수 있는 기술

{업 캐스팅} : Parent p2 = new Child1();

'Parent' 참조 변수 'p2' 가 'Child' 객체를 참조하고 있지만
'Child' 내부에 구현된 'Parent' 만을 참조할 수 있기 때문에
'Child' 객체가 'Parent' 객체로 변한 것처럼 보인다.

객체의 원래 모습       : 'Child'
변한 모습(처럼 보이는) : 'Parent'

한 객체가 2 가지 모습을 가짐 ==> ['다형성']

{객체 instanceof 클래스명} 연산자 : - 참조하고 있는 객체가 클래스명 객체가 맞는지 확인
                        true, false 로 반환 	

객체가 클래스명이거나 클래스명을 상속받는 클래스라면 true를 리턴합니다. 
그렇지 않으면 false를 리턴합니다.

큰 양동이 작은 양동이 개념으로 이해
*클래스명 은 변수명 참조 객체에 속하는가? 

Child > Parent > Object

Object p1 = new Child();

p1 instanceof Child  : true;
p1 instanceof Parent : true;
p1 instanceof Object : true;

Object p2 = new Parent();

p2 instanceof Child  : false;
p2 instanceof Parent : true;
p2 instanceof Object : true;

Object p3 = new Object();

p3 instanceof Child  : false;
p3 instanceof Parent : false;
p3 instanceof Object : true;

만약 Object를 검사하게 되면 모든 객체가 Object를 상속하므로 
true가 나올 수 밖에 없음

'참조하고 있는 객체' 가 중요
변수의 자료형은 무의미

ex) Parent p2 = new Child
Child를 참조하면 그 상위 클래스(Parent, Object)