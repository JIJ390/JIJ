[컬렉션]

자료구조 : 메모리상에서 자료를 구조적으로 처리하는 방법
'컬렉션'(Collection)은 자바에서 제공하는 '자료구조'를 담당하는 프레임워크
(Framework : 일하는 틀??) 

추가, 삭제, 정렬 등의 기능처리가 간단하게 해결
-> 자료구조적 알고리즘을 구현할 필요 없음

List(목록), Set(집합), Map(지도)

인터페이스 -> 추상 메서드로만 이루어짐 
ex) ArrayList, Vector, LinkedList 가 List를 접점으로 묶임

* List * - 순서를 유지하고 저장
         - 중복 저장 가능

* Set  * - 순서를 유지하지 않고 저장
         - 중복 저장 안됨 

=== List 와 Set 은 Collection 으로 묶임 (유사 메서드 다수 존재)===  
(인터페이스분류만!!! Map 도 Collection 의 일종!!!)       

* Map  * - 키와 값의 쌍으로 저장 (JS 객체 형태 )
         - 키는 중복 저장 안됨

제네릭스 : 타입 제한!
 void    add(int index, E e) : 더하기
 int     size()              : 크기
 E       get(int index)      : 반환
 E       set(int index, E e) : 바꾸기 (반환)
 boolean contains(E e)       : 포함하는지 확인
 int     indexOf(E e)        : 존재하면 index 반환
 E       remove(int index)   : 제거 후 반환

 LinkedList : 객체를 삽입 제거 할때 인접 링크들만 바꿔주면 됨
(ArrayList 를 쓰면 전체를 움직여야 함)


Set
- index 가 없음
-> index 를 활용하는 메서드가 없다
-> 원하는 요소 하나만을 꺼낼 수 없다
		
- 순서 유지 X
-> 중복 허용 X

boolean add(E e)      : 요소 추가
int     size()        : Set 에 저장된 객체(참조변수)의 수 반환
boolean remove(E e)   : Set 에 저장된 객체 중 같은 객체를 찾아 제거
boolean contains(E e) : 같은 요소가 있으면 true, false
boolean isEmpty()     : 비어있으면 true / false
void    clear()       : 저장된 객체 모두 제거

Map
키(key)와 값(value)으로 구성
키와 값은 모두 객체
키는 중복 저장을 허용하지 않고(Set방식), 값은 중복 저장 가능(List방식)

키가 중복되는 경우, 기존에 있는 키에 해당하는 값을 덮어 씌움
구현 클래스로 HashMap, HashTable, LinkedHashMap, Properties, TreeMap이 있음


V   put(K k, V v) : Map 에 K : V 한 쌍 추가, 성공시 Value 반환
                  -> 중복되는 key 가 없으면 null 
	 						    -> 중복되는 key 존재 시 이전 value 반환

V   get(K k)      : 해당 Key 에 대응되는 Value 반환 (없으면 null)
int size()        : Map 에 저장된 K:V 쌍의 개수를 반환
V   remove(K k)   : 제거 후 반환 (없으면 null)