[Java]

1) 운영체제에 독립적
2) 객체 지향 프로그래밍
3) 자동 메모리 관리(Garbage Collection)

Java 는 JS 와 달리 컴파일러로 코드를 번역 후 JVM에서 인터프리터 방식으로 해석
(JS는 번역 후 즉시 해석)

컴파일러 : 코드를 2진수로 번역하는 프로그램

JVM      : Java 를 실행하기 위한 가상 기계

JRE      : Java 실행 환경

----------------------------------------------------------------------
변수(Vaiable) : 메모리(RAM) 에 값을 기록하기 위한 공간
                지속적 사용

bit  : 데이터 최소 저장 단위 [2진수 값 하나]
byte : 데이터 처리(문자) 최소 단위, 8개의 비트

(자료형)
* boolean  : 1 byte
-----정수----- 
* byte     : 1 byte
* short    : 2 byte
* {int}    : 4 byte / 정수 기본형
* long     : 8 byte  
-----실수----- 
* float    : 4 byte
* {double} : 8 byte / 실수 기본형
-----문자----- 
* char     : 2 byte
* String   : 참조형


[객체 지향 프로그래밍(OOP)]

- 객체로 이루어진 현실 세계
- 객체 간의 상호 작용으로 사건이 발생
=> 라는 패러다임을 컴퓨터로 옮겨 놓은 것/ 프로그래밍

- Object   : 기능과 속성을 지닌 것, 식별 가능한 실재적 추상적 물체
- Class    : 기능(메서드)과 속성(필드)으로 묶어서 정의한 것, 객체의 설계도
- Instance : 클래스를 통해 생성된 객체

----------------------------------------------------------------------
Stack  메모리 영역 : 호출된 메서드가 쌓이는 영역, 메서드 내 지역 변수도 이곳에 생성
Heap   메모리 영역 : 동적 메모리 영역, 객체가 생성, Garbage Collection 이 일정 시간 마다 사용되지 않는 객체를 소멸
Static 메모리 영역 : 정적 메모리 영역, 전역 변수 (클래스명.메서드/필드명) 으로 호출 

----------------------------------------------------------------------
1) [추상화] - 공통점을 추출하고 불필요한 부분을 제거

2) [캡슐화] - 접근 제한자를 통해 직접 접근 차단, 기능을 통한 간접 접근 -> 정보 은닉 효과

3) [상속]   - 부모 클래스와 상속 관계에 있는 자식 클래스가 부모 객체의 멤버(필드, 메서드) 를 자신 것처럼 사용
            -> 코드 재사용성, 중복 코드 제거, 유지 보수 편리

4) [다형성] - 객체가 여러가지 형태를 띄는 것(부모 타입 객체가 상속 관계의 자식 객체를 참조)
            업 캐스팅과 다운 캐스팅

----------------------------------------------------------------------
Overloading : 메서드 이름을 공유하고 매개 변수가 다른 여러 개의 메서드를 작성
              매개 변수에 따라 다양한 상황에 대처 가능하게 만듬

Overriding  : 자식객체가 부모 객체로부터 상속받은 메서드를 재정의하여 사용

----------------------------------------------------------------------
정적 바인딩 : 프로그램 실행 전 업캐스팅된 참조변수 자료형에 따라 (부모 클래스)메서드가 연결

동적 바인딩 : 프로그램 실행 후 오버라이딩한 (자식 클래스)메서드가 우선권을 가져 실행

----------------------------------------------------------------------
Abstract  : 해당 메서드를 재사용해서 사용, 상속 자식들에게 공통 멤버 제공

Interface : 극한의 추상화 모든 메서드를 재사용해서 사용해야 함
            ->공통된 기능 구현 강제화, 공동 작업을 위한 인터페이스 제공
            (명시적 표현 X)

둘 다 객체 생성 불가 / 참조 변수의 자료형으로 사용


[컬렉션]

자료구조 : 메모리상에서 자료를 구조적으로 처리하는 방법
'컬렉션'(Collection)은 자바에서 제공하는 '자료구조'를 담당하는 프레임워크