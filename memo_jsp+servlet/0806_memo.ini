[웹 개발 상식]

Server : 기능을 제공하는 컴퓨터

Client : 기능을 요청하고 이용하는 고객 컴퓨터

        요청 (Request)  --->
Client                       Server
        <--- 응답 (Response)

----------------------------------------------

HTTP (Hyper Text Transfer Protocol)
- 서버-클라이언트 간의 HTML 요청-응답 전송(전달) 규약
  (인터넷에서 HTML 을 주고 받을 때의 약속)

IP (Internet Protocol)
 : 인터넷/ 네트워크를 통해 데이터을 송수신하는 규약
   -> 인터넷/네트워크에 연결된 각종 통신 기기를 구분하는 주소
      (컴퓨터, 휴대폰 등등)

IPv6 주소 . . . . : fe80::cab9:b9cb:457a:f99d%14  (2^16)^6
IPv4 주소 . . . . : 192.168.10.32   0 ~ 255 (2^8)^4 => 2^32

Port 번호 : 컴퓨터 내 프로그램을 구분하는 식별 번호

IP + Port 번호를 알아야 다른 컴퓨터(서버) 에 요청을 할 수 있다
ex) http://192.168.10.5.8080

bin (binary) 2진수, 컴파일된 파일들

bin>cmd>start.bat

-> 현재 기기의 로컬 IP 주소(내 컴퓨터) + tomcat 포트 번호
http://127.0.0.1:8080/

src/main/webapp HTML 파일 모이는 곳

이클립스 : 서버 / java
VS code  : HTML / CSS / JS
브라우저 : 테스트 환경

1. 클라이언트가 브라우저에 주소롤 요청을 보내면
2. 서버가 HTML 로 응답을 해줘서 - Servlet 이용
3. 클라이언트 브라우저가 이를 해석해서 화면에 출력해줌
(브라우저 : HTML 해석 도구)

ctrl shift r 강력 새로 고침

===========================================================
[Servlet]

웹 서비스를 위한 자바 클래스

클라이언트의 요청(Request)을 처리하고
그 결과를 다시 클라이언트에게 응답(Response)하는
Servlet클래스의 구현 규칙을 지킨 자바 프로그래밍 기술

클라이언트의 요청에 따라
Java Application(자바 프로그램) 으로
웹 브라우저용 출력 화면(HTML) 을 만들어 응답하는 기술

요청을 받을 때 마다 
알맞은 화면을 만들어(동적, Java에서 HTML 코드를 작성) 응답


*작성 요령*

 1. HttpServlet 상속 받기 
 
 2. @WebServlet("요청주소") 어노테이션 작성하기
 
 3. doGet() 또는 doPost() 오버라이딩 하기 (내부 내용 지워야 함 super() 도 !!)

(요청 / 읽어오기 메서드)
req.getParameter / getParameterValues

(응답 과정)

; 응답하는 문서의 형식과 문자 인코딩 지정
resp.setContentType("text/html; charset-UTF-8");
; 출력용 스트림 호출
PrintWriter out = resp.getWriter();

out.write(sb.toString());


